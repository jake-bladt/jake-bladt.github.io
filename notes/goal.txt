Ultimately, what I want to do is build software that solves real problems - not "how do I connect restaurants with take-out customers" problems - more like "how do we get clean, potable water to people who don't have it?" and "how do we use the Internet to make education available to people who don't have electricity?"

Ten years ago, I was a .net developer with a little bit of JavaScript, a little bit of Python, and a big pile of knowledge relating to obsolete, proprietary systems. Those skills were good enough to keep me working indefinitely, but they weren't the skills I would need to build the kind of software I wanted to write.

When you write software that isn't primarily designed for making money, you have to ask different questions than when you write propietary systems for your employer. There's a virtuous cycle to writing for-profit software: you pay to run it. It brings in money to keep it running. If you do it well and you're lucky, it brings in a surplus - enough to give you time to build bigger and better systems. Your primary design question is, "How do I write this to cost less than it brings in?"

When you write software that's meant to improve the human condition, the primary question is: How can I keep this running for as little money as possible for as long as possible? How can I solve more problems on less hardware? 

If you can't outrun your cost through profitability, it changes your whole outlook on building software. Commercial licenses, vendor lock-in, and forced obsolescence become deal-killers. You start looking to FOSS software running on commodity hardware.

In fairness to Microsoft, their embrace of FOSS in recent years has opened up a world of possibilities for changing the world with software running on the Windows platform. Back in the early aughts, Redmond's embrace of FOSS was much more tepid than it is now. I decided that, if I were going to build the systems I really wanted to, I would need to step out of the Microsoft creche and relearn how to get from an idea to a production system using only FOSS tools.


